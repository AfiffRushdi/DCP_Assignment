        // Inserts a new node on the front of the list
        void push(Node** head_ref, string new_data) 
            { 
                Node* new_node = new Node();        // Allocate node 
                new_node->name = new_data;          // Insert the data
                new_node->next = (*head_ref);       // Make next of new node as head 
                (*head_ref) = new_node;             // Move the head to point to the new node     
            } 

        // Insert a new node after the given node
        void insertAfter(Node* prev_node, string new_data)
            {
            
                // 1. Check if the given prev_node is NULL
                if (prev_node == NULL) 
                    {
                        cout << "The given previous node cannot be NULL";
                        return;
                    }
            
                Node* new_node = new Node();        // Allocate new node
                new_node->name = new_data;          // Insert the data
                new_node->next = prev_node->next;   // Make next of new node as next of prev_node
                prev_node->next = new_node;         // Move the next of prev_node as new_node
            }